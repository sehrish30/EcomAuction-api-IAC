{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ContactExternalAPILogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/external-verification-service-dev-contactExternalAPI"
      }
    },
    "VerifiedVehiclesLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/external-verification-service-dev-verifiedVehicles"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "external-verification-service",
                  "dev",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:TagResource"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/external-verification-service-dev*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/external-verification-service-dev*:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "sqs:ReceiveMessage",
                    "sqs:DeleteMessage",
                    "sqs:GetQueueAttributes"
                  ],
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "TargetVerificationQueue",
                        "Arn"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "external-verification-service",
              "dev",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "ContactExternalAPILambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "qloudnet-dev",
          "S3Key": "serverless/external-verification-service/dev/1684761011201-2023-05-22T13:10:11.201Z/external-verification-service.zip"
        },
        "Handler": "src/handlers/contactExternalAPI.handler",
        "Runtime": "nodejs18.x",
        "FunctionName": "external-verification-service-dev-contactExternalAPI",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "HEARTBEAT_TABLE_NAME": {
              "Ref": "HeartBeatDynamoTable"
            },
            "EVENTNAME": "vehicle_verification",
            "EVENTSOURCE": "vehicle_verification_app",
            "EventBusName": {
              "Ref": "EventBus"
            }
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "ContactExternalAPIIamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "ContactExternalAPIIamRoleLambdaExecution",
        "ContactExternalAPILogGroup"
      ]
    },
    "VerifiedVehiclesLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "qloudnet-dev",
          "S3Key": "serverless/external-verification-service/dev/1684761011201-2023-05-22T13:10:11.201Z/external-verification-service.zip"
        },
        "Handler": "src/handlers/verifiedVehicles.handler",
        "Runtime": "nodejs18.x",
        "FunctionName": "external-verification-service-dev-verifiedVehicles",
        "MemorySize": 1024,
        "Timeout": 6,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "VerifiedVehiclesLogGroup"
      ]
    },
    "ContactExternalAPILambdaVersionZqkHrMU1vCyY2NwmMngxdDKHxMfcm3ollhDniRaTsnc": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "ContactExternalAPILambdaFunction"
        },
        "CodeSha256": "mIahJ146x175VBBqOaJzAl1mNxDEC7E/8lR0uQPZ07k="
      }
    },
    "VerifiedVehiclesLambdaVersionToP3lpvSiggaSXiNOpIbsJ9B8E1XHAuB8WgnN0pBr0": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "VerifiedVehiclesLambdaFunction"
        },
        "CodeSha256": "mIahJ146x175VBBqOaJzAl1mNxDEC7E/8lR0uQPZ07k="
      }
    },
    "ExternalverificationservicedevverifiedVehiclesrule1EventBridgeRule": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "EventBusName": {
          "Fn::GetAtt": [
            "EventBus",
            "Name"
          ]
        },
        "EventPattern": {
          "source": [
            "vehicle_verification_app"
          ],
          "detail-type": [
            "vehicle_verification"
          ]
        },
        "Name": "external-verification-service-dev-verifiedVehicles-rule-1",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "VerifiedVehiclesLambdaFunction",
                "Arn"
              ]
            },
            "Id": "external-verification-service-dev-verifiedVehicles-rule-1-target"
          }
        ]
      }
    },
    "VerifiedVehiclesEventBridgeLambdaPermission1": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "VerifiedVehiclesLambdaFunction",
            "Arn"
          ]
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            ":",
            [
              "arn",
              {
                "Ref": "AWS::Partition"
              },
              "events",
              {
                "Ref": "AWS::Region"
              },
              {
                "Ref": "AWS::AccountId"
              },
              {
                "Fn::Join": [
                  "/",
                  [
                    "rule",
                    {
                      "Fn::GetAtt": [
                        "EventBus",
                        "Name"
                      ]
                    },
                    "external-verification-service-dev-verifiedVehicles-rule-1"
                  ]
                ]
              }
            ]
          ]
        }
      }
    },
    "ContactExternalAPIEventSourceMappingSQSTargetVerificationQueue": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "DependsOn": "ContactExternalAPIIamRoleLambdaExecution",
      "Properties": {
        "BatchSize": 10,
        "EventSourceArn": {
          "Fn::GetAtt": [
            "TargetVerificationQueue",
            "Arn"
          ]
        },
        "FunctionName": {
          "Fn::GetAtt": [
            "ContactExternalAPILambdaFunction",
            "Arn"
          ]
        },
        "Enabled": true,
        "FunctionResponseTypes": [
          "ReportBatchItemFailures"
        ]
      }
    },
    "ApiGatewayRestApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "dev-external-verification-service",
        "EndpointConfiguration": {
          "Types": [
            "EDGE"
          ]
        },
        "Policy": ""
      }
    },
    "ApiGatewayResourceEventbridge": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "eventbridge",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodEventbridgeOptions": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "ResponseModels": {}
          }
        ],
        "RequestParameters": {},
        "Integration": {
          "Type": "MOCK",
          "RequestTemplates": {
            "application/json": "{statusCode:200}"
          },
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationResponses": [
            {
              "StatusCode": "200",
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
              },
              "ResponseTemplates": {
                "application/json": "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".+\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
              }
            }
          ]
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceEventbridge"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApigatewayToEventBridgeRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "apigatewaytoeventbridge",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "events:PutEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": [
                        "arn:${AWS::Partition}:events:${AWS::Region}:${AWS::AccountId}:event-bus/${eventBusName}",
                        {
                          "eventBusName": {
                            "Ref": "EventBus"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    "ApiGatewayMethodEventbridgePost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "AuthorizationType": "NONE",
        "ApiKeyRequired": false,
        "ResourceId": {
          "Ref": "ApiGatewayResourceEventbridge"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS",
          "Credentials": {
            "Fn::GetAtt": [
              "ApigatewayToEventBridgeRole",
              "Arn"
            ]
          },
          "Uri": {
            "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:events:action/PutEvents"
          },
          "PassthroughBehavior": "NEVER",
          "RequestParameters": {
            "integration.request.header.X-Amz-Target": "'AWSEvents.PutEvents'",
            "integration.request.header.Content-Type": "'application/x-amz-json-1.1'"
          },
          "RequestTemplates": {
            "application/json": {
              "Fn::Sub": [
                "{\"Entries\":[{\"Detail\": \"${Detail}\",\"DetailType\": \"${DetailType}\",\"EventBusName\": \"${EventBusName}\",\"Source\": \"${Source}\"}]}",
                {
                  "EventBusName": {
                    "Ref": "EventBus"
                  },
                  "Detail": "$util.escapeJavaScript($input.body)",
                  "DetailType": "vehicle_verification",
                  "Source": "vehicle_verification_app"
                }
              ]
            },
            "application/x-www-form-urlencoded": {
              "Fn::Sub": [
                "{\"Entries\":[{\"Detail\": \"${Detail}\",\"DetailType\": \"${DetailType}\",\"EventBusName\": \"${EventBusName}\",\"Source\": \"${Source}\"}]}",
                {
                  "EventBusName": {
                    "Ref": "EventBus"
                  },
                  "Detail": "$util.escapeJavaScript($input.body)",
                  "DetailType": "vehicle_verification",
                  "Source": "vehicle_verification_app"
                }
              ]
            }
          },
          "IntegrationResponses": [
            {
              "StatusCode": 200,
              "SelectionPattern": 200,
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "ResponseTemplates": {}
            },
            {
              "StatusCode": 400,
              "SelectionPattern": 400,
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "ResponseTemplates": {}
            },
            {
              "StatusCode": 500,
              "SelectionPattern": 500,
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "ResponseTemplates": {}
            }
          ]
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": "'*'"
            },
            "ResponseModels": {},
            "StatusCode": 200
          },
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": "'*'"
            },
            "ResponseModels": {},
            "StatusCode": 400
          },
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": "'*'"
            },
            "ResponseModels": {},
            "StatusCode": 500
          }
        ]
      }
    },
    "ApiGatewayDeployment1684760900234": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "StageName": "dev"
      },
      "DependsOn": [
        "ApiGatewayMethodEventbridgeOptions",
        "ApiGatewayMethodEventbridgePost"
      ]
    },
    "ContactExternalAPIIamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "external-verification-service",
                  "dev",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/external-verification-service-dev-contactExternalAPI:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "sqs:ReceiveMessage",
                    "sqs:DeleteMessage",
                    "sqs:GetQueueAttributes"
                  ],
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "TargetVerificationQueue",
                        "Arn"
                      ]
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:Query",
                    "dynamodb:PutItem"
                  ],
                  "Resource": {
                    "Fn::GetAtt": [
                      "HeartBeatDynamoTable",
                      "Arn"
                    ]
                  }
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "events:PutEvents"
                  ],
                  "Resource": {
                    "Fn::GetAtt": [
                      "EventBus",
                      "Arn"
                    ]
                  }
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "external-verification-service",
              "dev",
              "contactExternalAPI",
              {
                "Ref": "AWS::Region"
              }
            ]
          ]
        },
        "ManagedPolicyArns": []
      }
    },
    "EventBus": {
      "Type": "AWS::Events::EventBus",
      "Properties": {
        "Name": "ExternalServiceEventBus-dev"
      }
    },
    "TargetVerificationDLQ": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "QueueName": "VerificationDLQ-dev"
      }
    },
    "TargetVerificationQueue": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "QueueName": "VerificationQueue-dev",
        "RedrivePolicy": {
          "deadLetterTargetArn": {
            "Fn::GetAtt": [
              "TargetVerificationDLQ",
              "Arn"
            ]
          },
          "maxReceiveCount": 1
        }
      }
    },
    "TargetVerificationQueuePolicy": {
      "Type": "AWS::SQS::QueuePolicy",
      "Properties": {
        "Queues": [
          {
            "Ref": "TargetVerificationQueue"
          }
        ],
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "SQS:SendMessage"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "TargetVerificationQueue",
                  "Arn"
                ]
              },
              "Principal": {
                "Service": [
                  "events.amazonaws.com"
                ]
              }
            }
          ]
        }
      }
    },
    "HeartBeatDynamoTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "HeartBeatExternalAPI-dev",
        "BillingMode": "PAY_PER_REQUEST",
        "AttributeDefinitions": [
          {
            "AttributeName": "ApiId",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "ApiId",
            "KeyType": "HASH"
          }
        ],
        "TimeToLiveSpecification": {
          "AttributeName": "TTL",
          "Enabled": true
        }
      }
    },
    "TargetVerfiticationQueueEventBusRule": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "EventBusName": {
          "Fn::GetAtt": [
            "EventBus",
            "Arn"
          ]
        },
        "EventPattern": {
          "detail-type": [
            "vehicle_verification"
          ],
          "source": [
            "vehicle_verification_app"
          ]
        },
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "TargetVerificationQueue",
                "Arn"
              ]
            },
            "Id": "event-bus-verification-queue-dev"
          }
        ]
      }
    },
    "CodePipelineArtifactStore": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "VersioningConfiguration": {
          "Status": "Enabled"
        }
      }
    },
    "CodePipeline": {
      "Type": "AWS::CodePipeline::Pipeline",
      "Properties": {
        "Name": "infra-pipeline-dev",
        "RoleArn": {
          "Fn::GetAtt": [
            "CodePipelineServiceRole",
            "Arn"
          ]
        },
        "ArtifactStore": {
          "Type": "S3",
          "Location": {
            "Ref": "CodePipelineArtifactStore"
          }
        },
        "Stages": [
          {
            "Name": "Source",
            "Actions": [
              {
                "Name": "Source",
                "ActionTypeId": {
                  "Category": "Source",
                  "Owner": "ThirdParty",
                  "Provider": "GitHub",
                  "Version": "1"
                },
                "Configuration": {
                  "Owner": {
                    "Ref": "GithubOwner"
                  },
                  "Repo": {
                    "Ref": "GithubRepository"
                  },
                  "Branch": {
                    "Ref": "GithubBranch"
                  },
                  "PollForSourceChanges": false,
                  "OAuthToken": "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"
                },
                "OutputArtifacts": [
                  {
                    "Name": "SourceCode"
                  }
                ]
              }
            ]
          },
          {
            "Name": "Build",
            "Actions": [
              {
                "Name": "Build",
                "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1"
                },
                "Configuration": {
                  "ProjectName": {
                    "Ref": "CodeBuildProject"
                  }
                },
                "OutputArtifacts": [
                  {
                    "Name": "BuildOutput"
                  }
                ],
                "InputArtifacts": [
                  {
                    "Name": "SourceCode"
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    "CodeBuildSourceCredentials": {
      "Type": "AWS::CodeBuild::SourceCredential",
      "Properties": {
        "AuthType": "PERSONAL_ACCESS_TOKEN",
        "ServerType": "GITHUB",
        "Token": "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"
      }
    },
    "CodePipelineServiceRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": "CodePipelineServiceRole",
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "codepipeline.amazonaws.com",
                  "codebuild.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "root",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Sid": "CloudWatchLogsPolicy",
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Resource": "*"
                },
                {
                  "Sid": "CodeCommitPolicy",
                  "Effect": "Allow",
                  "Action": [
                    "codecommit:GitPull"
                  ],
                  "Resource": "*"
                },
                {
                  "Sid": "S3GetObjectPolicy",
                  "Effect": "Allow",
                  "Action": [
                    "s3:GetObject",
                    "s3:GetObjectVersion"
                  ],
                  "Resource": "*"
                },
                {
                  "Sid": "S3PutObjectPolicy",
                  "Effect": "Allow",
                  "Action": [
                    "s3:PutObject"
                  ],
                  "Resource": "*"
                },
                {
                  "Sid": "ECRPullPolicy",
                  "Effect": "Allow",
                  "Action": [
                    "ecr:BatchCheckLayerAvailability",
                    "ecr:GetDownloadUrlForLayer",
                    "ecr:BatchGetImage"
                  ],
                  "Resource": "*"
                },
                {
                  "Sid": "ECRAuthPolicy",
                  "Effect": "Allow",
                  "Action": [
                    "ecr:GetAuthorizationToken"
                  ],
                  "Resource": "*"
                },
                {
                  "Sid": "S3BucketIdentity",
                  "Effect": "Allow",
                  "Action": [
                    "s3:GetBucketAcl",
                    "s3:GetBucketLocation"
                  ],
                  "Resource": "*"
                },
                {
                  "Sid": "CodeBuildPolicy",
                  "Effect": "Allow",
                  "Action": [
                    "codebuild:BatchGetBuilds",
                    "codebuild:StartBuild"
                  ],
                  "Resource": "*"
                },
                {
                  "Sid": "SSM",
                  "Effect": "Allow",
                  "Action": [
                    "ssm:*"
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },
    "CodeBuildProject": {
      "Type": "AWS::CodeBuild::Project",
      "Properties": {
        "Name": "infra-codebuild-dev",
        "ServiceRole": {
          "Fn::GetAtt": [
            "CodePipelineServiceRole",
            "Arn"
          ]
        },
        "ConcurrentBuildLimit": 1,
        "Source": {
          "Type": "GITHUB",
          "Location": {
            "Ref": "GithubRepositoryLink"
          },
          "BuildSpec": "./external-verification-service/config/build/buildspec.dev.yml",
          "Auth": {
            "Type": "OAUTH",
            "Resource": {
              "Ref": "CodeBuildSourceCredentials"
            }
          }
        },
        "Artifacts": {
          "Type": "NO_ARTIFACTS"
        },
        "Triggers": {
          "Webhook": true,
          "FilterGroups": [
            [
              {
                "Type": "EVENT",
                "Pattern": "PULL_REQUEST_CREATED, PULL_REQUEST_UPDATED, PULL_REQUEST_REOPENED, PUSH"
              },
              {
                "Type": "HEAD_REF",
                "Pattern": "main"
              }
            ]
          ]
        },
        "Environment": {
          "Type": "LINUX_CONTAINER",
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": {
            "Ref": "CodeBuildEnvironmentImage"
          },
          "EnvironmentVariables": [
            {
              "Name": "BUCKET_NAME",
              "Value": "qloudnet-dev"
            }
          ]
        }
      }
    },
    "CodePipelineWebHook": {
      "Type": "AWS::CodePipeline::Webhook",
      "Properties": {
        "Authentication": "GITHUB_HMAC",
        "AuthenticationConfiguration": {
          "SecretToken": "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"
        },
        "RegisterWithThirdParty": true,
        "Filters": [
          {
            "JsonPath": "$.ref",
            "MatchEquals": "main"
          },
          {
            "JsonPath": "$.repository.name",
            "MatchEquals": "{Repo}"
          }
        ],
        "TargetPipeline": {
          "Ref": "CodePipeline"
        },
        "TargetAction": "Source",
        "TargetPipelineVersion": {
          "Fn::GetAtt": [
            "CodePipeline",
            "Version"
          ]
        }
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": "qloudnet-dev",
      "Export": {
        "Name": "sls-external-verification-service-dev-ServerlessDeploymentBucketName"
      }
    },
    "ContactExternalAPILambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "ContactExternalAPILambdaVersionZqkHrMU1vCyY2NwmMngxdDKHxMfcm3ollhDniRaTsnc"
      },
      "Export": {
        "Name": "sls-external-verification-service-dev-ContactExternalAPILambdaFunctionQualifiedArn"
      }
    },
    "VerifiedVehiclesLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "VerifiedVehiclesLambdaVersionToP3lpvSiggaSXiNOpIbsJ9B8E1XHAuB8WgnN0pBr0"
      },
      "Export": {
        "Name": "sls-external-verification-service-dev-VerifiedVehiclesLambdaFunctionQualifiedArn"
      }
    },
    "ServiceEndpoint": {
      "Description": "URL of the service endpoint",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "ApiGatewayRestApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/dev"
          ]
        ]
      },
      "Export": {
        "Name": "sls-external-verification-service-dev-ServiceEndpoint"
      }
    },
    "VerificationEventBus": {
      "Description": "VerificationEventBus for output",
      "Value": {
        "Ref": "EventBus"
      }
    }
  },
  "Parameters": {
    "CodeBuildEnvironmentImage": {
      "Type": "String",
      "Default": "aws/codebuild/standard:7.0"
    },
    "GithubOwner": {
      "Type": "String",
      "Default": "sehrish30"
    },
    "GithubRepository": {
      "Type": "String",
      "Default": "auction-api-IAC"
    },
    "GithubBranch": {
      "Type": "String",
      "Default": "main"
    },
    "GithubRepositoryLink": {
      "Type": "String",
      "Default": "https://github.com/sehrish30/auction-api-IAC.git"
    }
  }
}