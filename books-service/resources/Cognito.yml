CognitoUserPool:
  Type: AWS::Cognito::UserPool
  Properties:
    UserPoolName: "Books"
    UsernameAttributes: # Determines whether email addresses or phone numbers can be specified as user names when a user sign
      - email

# application communicate through client, attach it with user pool
CognitoUserPoolClient:
  Type: AWS::Cognito::UserPoolClient
  Properties:
    ClientName: Web
    UserPoolId: !Ref CognitoUserPool

# user pool groups
CongitoAdminGroup:
  Type: AWS::Cognito::UserPoolGroup
  Properties:
    Description: "Admin users belong to this group"
    GroupName: "Admin"
    Precedence: 0 # if user is part of multiple groups precendence means high priority
    RoleArn: !GetAtt CongitoAdminIAMRole.Arn # because admins have extra permissions
    UserPoolId: !Ref CognitoUserPool

# user pool groups
CongitoCustomGroup:
  Type: AWS::Cognito::UserPoolGroup
  Properties:
    Description: "Customers users belong to this group"
    GroupName: "Customer"
    Precedence: 1 # if user is part of multiple groups precendence means high priority
    RoleArn: !GetAtt CongitoCustomersIAMRole.Arn # because admins have extra permissions
    UserPoolId: !Ref CognitoUserPool

# IAM ROLE for cognito Admin
CongitoAdminIAMRole:
  Type: AWS::IAM::Role
  Properties:
    RoleName: CognitoAdminRole
    Description: "This is the iam role for admins of feedback"
    AssumeRolePolicyDocument:
      Version: "2012-10-17"
      Statement:
        - Effect: Allow
          Principal: # who is going to assume that role, its federation cognito
            Federated:
              - "cognito-identity.amazonaws.com"
          Action:
            - "sts:AssumeRoleWithWebIdentity"
    Policies:
      - PolicyName: "AdminPolicy"
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Action:
                - "dynamodb:*"
              Resource:
                - !GetAtt BooksTable.Arn
                - !GetAtt OrdersTable.Arn

CongitoCustomersIAMRole:
  Type: AWS::IAM::Role
  Properties:
    RoleName: CognitoCustomerRole
    Description: "This is the iam role for customers of feedback"
    AssumeRolePolicyDocument:
      Version: "2012-10-17"
      Statement:
        - Effect: Allow
          Principal: # who is going to assume that role, its federation cognito
            Federated:
              - "cognito-identity.amazonaws.com"
          Action:
            - "sts:AssumeRoleWithWebIdentity"
    Policies:
      - PolicyName: "CustomerPolicy"
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Action:
                - "dynamodb:*"
              Resource:
                - !GetAtt OrdersTable.Arn
            - Effect: "Allow"
              Action:
                - "dynamodb:GetItem"
                - "dynamodb:Query"
                - "dynamodb:Scan"
                - "dynamodb:BatchGetItem"
              Resource:
                - !GetAtt BooksTable.Arn
